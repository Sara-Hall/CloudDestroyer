/*
 * Draw clouds for the game
 * My notes: It was difficult to figure out how to get rid of individual clouds once they were hit.
 * I did this by giving each cloud an initial value of 1, and adding a condition to only redraw the cloud if it still had a value of 1.
 */
package BrickGame;

import java.awt.Color;
import java.awt.Graphics2D;
/**
 *
 * @author sara
 */
public class Clouds {
    public int[][] clouds;
    public int cloudLength;
    public int cloudHeight;
    
    // set cloud initial values equal to 1
    // Netbeans suggested that I used an enhanced for loop
    public Clouds(int row,int col) {
        clouds = new int[row][col];
        for (int[] cloud : clouds) {
            for(int j=0; j < clouds[0].length; j++) {
                cloud[j] = 1;
            }
        }
        // size of clouds
        cloudLength = 120;
        cloudHeight = 50;
    }
    // draw clouds
    public void draw(Graphics2D g) {
        for(int i=0; i < clouds.length; i++) {
            for(int j=0; j < clouds[0].length; j++) {
                // don't draw the cloud if it's hit
                if(clouds[i][j] > 0) {
                    g.setColor(Color.white);
                    g.fillOval(j * cloudLength + 50, i * cloudHeight + 30, cloudLength, cloudHeight);
                }
            }
        }    
    }
    
    public void cloudValue(int value, int row, int col) {
        clouds[row][col] = value;
    }
    
}
